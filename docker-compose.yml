services:
  api1: &api
    build: ./app
    hostname: api1
    container_name: api1
    # ports:
    #   - "8080:80"
    environment:
      ASPNETCORE_URLS: http://+:8080
      ASPNETCORE_ENVIRONMENT: Development
      MAX_CONCURRENT_PROCESSES: 80
      REDIS_CONNECTION: redis:6379
    networks:
      - backend
      - payment-processor
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "130MB"

  api2:
    <<: *api
    hostname: api2
    container_name: api2

  load-balancer:
    image: nginx:1.25.2-alpine
    container_name: load-balancer
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    networks:
      - backend
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "30MB"

  redis:
    image: redis:7-alpine
    container_name: redis
    command:
      [
        "redis-server",
        "--save",
        "",
        "--appendonly",
        "no",
        "--maxclients",
        "10000",
        "--tcp-backlog",
        "511",
        "--dynamic-hz",
        "yes",
      ]
    ports:
      - "6379:6379"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "60MB"

networks:
  backend:
    name: backend
    driver: bridge
  payment-processor:
    external: true
